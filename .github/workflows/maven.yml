# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ 'ubuntu-latest', 'windows-latest' ]
        java: ['21']
        distribution: ['temurin', 'adopt', 'sapmachine']

    steps:
    - uses: actions/checkout@v4

    - name: Download SAP Machine JDK when necessary
      if: matrix.distribution == 'sapmachine'
      run: |
        os_part=$( [ "${{ runner.os }}" == "Windows" ] && echo "windows" || echo "linux" )
        extension=$( [ "${{ runner.os }}" == "Windows" ] && echo "zip" || echo "tar.gz" )
        version_part=$( [ "${{ matrix.java }}" == "21" ] && echo "21.0.1" || echo "17.0.9" )
        download_url="https://github.com/SAP/SapMachine/releases/download/sapmachine-${version_part}/sapmachine-jdk-${version_part}_${os_part}-x64_bin.${extension}"
        curl -L -o $RUNNER_TEMP/java_package.$extension $download_url
        echo "Downloaded $download_url in $RUNNER_TEMP"
      shell: bash
    
    - name: Set up JDK Java ${{ matrix.java }} (${{ matrix.distribution }}) on ${{ matrix.os }}
      uses: actions/setup-java@v4
      with:
        distribution: ${{ matrix.distribution == 'sapmachine' && 'jdkfile' || matrix.distribution }}
        jdkFile: ${{ matrix.distribution == 'sapmachine' && format('{0}/java_package.{1}', runner.temp, matrix.os == 'windows-latest' && 'zip' || 'tar.gz') }}
        java-version: ${{ matrix.java }}
        architecture: x64
        cache: maven  

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Submit Dependency Snapshot
      uses: advanced-security/maven-dependency-submission-action@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
